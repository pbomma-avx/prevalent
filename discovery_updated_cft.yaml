---
AWSTemplateFormatVersion: '2010-09-09'
Description: Aviatrix Systems - <BYOL> - Creates the necessary IAM policies, roles,
  security group and launches Aviatrix Discovery EC2 instance.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VPCParam
      - SubnetParam
    - Label:
        default: Amazon EC2 Configuration
      Parameters:
      - KeyNameParam
      - InstanceTypeParam
    - Label:
        default: IAM role creation
      Parameters:
      - IAMRoleParam
    ParameterLabels:
      VPCParam:
        default: Which VPC should the Aviatrix Discovery be deployed in?
      SubnetParam:
        default: Which public subnet in the VPC?
      KeyNameParam:
        default: Which keypair will be used?
      IAMRoleParam:
        default: Select aviatrix-discovery-role(read-only) if Aviatrix IAM role has not been created (first time
          launch). Select aviatrix-role-ec2 if there is already Aviatrix IAM role
          created
      InstanceTypeParam:
        default: Select Controller Size
Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  VPCParam:
    Type: AWS::EC2::VPC::Id
    Description: Select Your VPC
  SubnetParam:
    Type: AWS::EC2::Subnet::Id
    Description: Aviatrix Discovery must be launched on a Public Subnet
  KeyNameParam:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Select your Keypair
  IAMRoleParam:
    Description: Determine if IAM roles aviatrix-discovery-role should
      be created.
    Default: aviatrix-discovery-role
    Type: String
    AllowedValues:
    - aviatrix-role-ec2
    - aviatrix-discovery-role
  InstanceTypeParam:
    Type: String
    Default: t3.medium
    AllowedValues:
    - t3.medium
    - t2.small
    Description: Select an instance size for the Discovery. Default is t3.medium
Conditions:
  AviatrixIAMRoleNotExist:
    Fn::Equals:
    - Ref: IAMRoleParam
    - aviatrix-discovery-role

Resources:
  AviatrixDiscoveryRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Condition: AviatrixIAMRoleNotExist
    Properties:
      RoleName: aviatrix-discovery-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      MaxSessionDuration: 14400
      Path: "/"
  CreateAviatrixDiscoveryPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Condition: AviatrixIAMRoleNotExist
    Properties:
      ManagedPolicyName: aviatrix-discovery-policy
      Description: Policy for creating aviatrix-discovery-policy
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ec2:DescribeTransitGatewayVpcAttachments
          - ec2:GetTransitGatewayAttachmentPropagations
          - ec2:DescribeVpcs
          - ec2:DescribeVpcPeeringConnections
          - ec2:DescribeNatGateways
          - ec2:DescribeRouteTables
          Resource: "*"
      Roles:
      - Ref: AviatrixDiscoveryRole
  AviatrixInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DeletionPolicy: Delete
    Condition: AviatrixIAMRoleNotExist
    Properties:
      Path: "/"
      InstanceProfileName: aviatrix-discovery-role
      Roles:
      - Ref: AviatrixDiscoveryRole
  AviatrixDiscovery:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      DisableApiTermination: 'false'
      KeyName:
        Ref: KeyNameParam
      InstanceType:
        Ref: InstanceTypeParam
      IamInstanceProfile:
        Ref: IAMRoleParam
      NetworkInterfaces:
      - DeviceIndex: '0'
        GroupSet:
        - Ref: AviatrixSG
        SubnetId:
          Ref: SubnetParam
      UserData:
        Fn::Base64: 
          !Sub |
              #!/bin/bash -xe
              sudo yum update -y
              sudo yum install python3
              sudo yum install python3-pip -y
              sudo pip3 install PyYAML
              sudo pip3 install botocore
              sudo pip3 install boto3
              sudo pip3 install requests
              sudo pip3 install retry
              sudo yum install git -y
              sudo pip3 install XlsxWriter
              sudo pip3 install pandas
              cd /home/ec2-user
              echo 'ClientAliveInterval 60' | sudo tee --append /etc/ssh/sshd_config
              sudo systemctl restart sshd.service
              logout
      Tags:
      - Key: Name
        Value: AviatrixDiscovery
      - Key: Project
        Value: Aviatrix
  AviatrixEIP:
    Type: AWS::EC2::EIP
    DeletionPolicy: Delete
    Properties:
      InstanceId:
        Ref: AviatrixDiscovery
      Domain: vpc
  AviatrixSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Aviatrix - Allow SSH access to Aviatrix Discovery Instance
      VpcId:
        Ref: VPCParam
      SecurityGroupIngress:
      - IpProtocol: tcp
        CidrIp: 0.0.0.0/0
        FromPort: '22'
        ToPort: '22'
      Tags:
      - Key: Name
        Value: AviatrixDiscoverySecurityGroup
      - Key: Project
        Value: Aviatrix
Outputs:
  AviatrixDiscoveryEIP:
    Description: AviatrixDiscovery External IP
    Value:
      Fn::GetAtt:
      - AviatrixDiscovery
      - PublicIp
  AviatrixDiscoveryPrivateIP:
    Description: AviatrixDiscovery Private IP
    Value:
      Fn::GetAtt:
      - AviatrixDiscovery
      - PrivateIp
